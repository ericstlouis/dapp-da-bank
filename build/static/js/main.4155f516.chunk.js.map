{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","depositAmount","setDepositAmount","withdrawAmount","setWithdrawAmount","WalletConnected","setWalletConnect","vault","setVault","userAssets","setUserAssets","yieldToken","setYieldTokens","connectToWallet","a","web3Modal","Web3Modal","connect","connection","provider","ethers","providers","Web3Provider","window","ethereum","signer","getSigner","bankInfo","Contract","bankContract","Bank","abi","tokenInfo","tokenContract","Token","utils","totalAssets","bankAssets","formatEther","getAddress","accounts","balanceOf","totalTokens","selectedAddress","console","log","event","preventDefault","deposit","value","parseEther","toString","tx","wait","withdraw","useEffect","className","onClick","onSubmit","type","name","onChange","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4155f516.chunk.js","sourcesContent":["import './App.css';\nimport Web3Modal from 'web3modal';\nimport { ethers } from 'ethers';\nimport { useState, useEffect } from 'react';\nimport {bankContract, tokenContract} from './contract-address.json';\nimport Bank from './artifacts/contracts/Bank.sol/Bank.json';\nimport Token from './artifacts/contracts/Token.sol/Token.json';\n\n\nfunction App() {\n  //States\n  const [depositAmount, setDepositAmount] = useState(\"\")\n  const [withdrawAmount, setWithdrawAmount] = useState(\"\");\n  const [WalletConnected, setWalletConnect] = useState(\"connect to wallet\");\n  const [vault , setVault] = useState();\n  const [userAssets, setUserAssets] = useState();\n  const [yieldToken, setYieldTokens] = useState();\n  useEffect(() => {\n    connectToWallet()\n  }, [])\n\n\n  //Connect to wallet\n  async function connectToWallet() {\n    const web3Modal = new Web3Modal();\n    const connection = await web3Modal.connect();\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner()\n    const bankInfo = new ethers.Contract(bankContract, Bank.abi, provider);\n    const tokenInfo = new ethers.Contract(tokenContract, Token.abi, provider);\n    const bankAssets = ethers.utils.formatEther(await bankInfo.totalAssets(), 'ether');\n    const userAssets = ethers.utils.formatEther(await bankInfo.accounts(await signer.getAddress()))\n    const totalTokens = ethers.utils.formatEther(await tokenInfo.balanceOf(await signer.getAddress()))\n    setVault(bankAssets);\n    setUserAssets(userAssets);\n    setYieldTokens(totalTokens);\n    setWalletConnect(connection.selectedAddress);\n\n    console.log(connection.selectedAddress);\n    console.log(bankAssets);\n    console.log(userAssets);\n    console.log(totalTokens);\n  }\n\n  async function deposit(event) {\n    event.preventDefault();\n    const web3Modal = new Web3Modal();\n    const connection = await web3Modal.connect();\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner()\n    const bankInfo = new ethers.Contract(bankContract, Bank.abi, signer);\n    const tokenInfo = new ethers.Contract(tokenContract, Token.abi, signer);\n    const tx = await bankInfo.deposit(\n      {value: ethers.utils.parseEther(depositAmount.toString())});\n    await tx.wait();\n    const bankAssets = ethers.utils.formatEther(await bankInfo.totalAssets(), 'ether');\n    const userAssets = ethers.utils.formatEther(await bankInfo.accounts(await signer.getAddress()))\n    const totalTokens = ethers.utils.formatEther(await tokenInfo.balanceOf(await signer.getAddress()))\n    setVault(bankAssets);\n    setUserAssets(userAssets);\n    setYieldTokens(totalTokens);\n  }\n\n  async function withdraw(event) {\n    event.preventDefault();\n    const web3Modal = new Web3Modal();\n    const connection = await web3Modal.connect();\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const bankInfo = new ethers.Contract(bankContract, Bank.abi, signer);\n    const tokenInfo = new ethers.Contract(tokenContract, Token.abi, signer);\n    const tx = await bankInfo.withdraw( \n     ethers.utils.parseEther(withdrawAmount.toString()),\n     tokenContract\n     );\n     await tx.wait();\n     const bankAssets = ethers.utils.formatEther(await bankInfo.totalAssets(), 'ether');\n    const userAssets = ethers.utils.formatEther(await bankInfo.accounts(await signer.getAddress()))\n    const totalTokens = ethers.utils.formatEther(await tokenInfo.balanceOf(await signer.getAddress()))\n     setVault(bankAssets);\n     setUserAssets(userAssets);\n     setYieldTokens(totalTokens);\n  }\n\n  return (\n    <div className=\"flex items-center justify-center h-screen\">\n      <header className=\"\">\n        <h1 className=\"text-3xl\ttext-center\t\">DA BANK</h1>\n        <p className=\"text-3xl text-center mb-2 \">A decentralized bank</p>\n        <button className=\"text-2xl mb-5 \" onClick={() => connectToWallet()}>{WalletConnected}</button>\n        <p className=\"border-black border-solid\trounded-sm border-2 text-3xl\t\"> Bank vault: {vault} </p>\n        <p className=\"border-black border-solid rounded-sm border-2\tmy-5 text-3xl\t\"> your Amount: {userAssets} </p>\n        <p className=\"border-black border-solid rounded-sm border-2 mb-1\ttext-3xl\t\"> Da tokens(yieldToken): {yieldToken} </p>\n\n        <div className=\"flex space-x-5 \">\n        <form onSubmit={deposit}>\n          <label className=\"text-3xl\">\n            Deposit:\n            <input className=\"text-center\"\n              type=\"number\"\n              name=\"depositAmount\"\n              value={depositAmount}\n              onChange={(e) => setDepositAmount(e.target.value)}\n            />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n\n        <form onSubmit={withdraw}>\n          <label className=\"text-3xl\">\n            Withdrawal:\n            <input className=\"text-center\"\n              type=\"number\"\n              name=\"withdrawalAmount\"\n              value={withdrawAmount}\n              onChange={(e) => setWithdrawAmount(e.target.value)}\n            />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}