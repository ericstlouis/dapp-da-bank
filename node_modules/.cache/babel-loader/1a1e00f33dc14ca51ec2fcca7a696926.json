{"ast":null,"code":"var _jsxFileName = \"C:\\\\web_development\\\\da-bank\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { ChainId, DAppProvider, useEtherBalance, useEthers } from '@usedapp/core';\nimport { formatEther } from '@ethersproject/units';\nimport { ethers } from 'ethers';\nimport { useState, useEffect } from 'react';\nimport { bankContract, tokenContract } from './contract-address.json';\nimport Bank from './artifacts/contracts/Bank.sol/Bank.json';\nimport Token from './artifacts/contracts/Token.sol/Token.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  readOnlyChainId: ChainId.Hardhat,\n  readOnlyUrls: {\n    [ChainId.Hardhat]: 'Hardhat'\n  }\n};\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(DAppProvider, {\n    config: config,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction App() {\n  _s();\n\n  // //States\n  // const [WalletConnected, setWalletConnect] = useState(\"connect to wallet\");\n  // const [vault , setVault] = useState();\n  // const [userAssets, setUserAssets] = useState();\n  // useEffect(() => {\n  //   loadVault()\n  // }, [])\n  // async function loadVault() {\n  //   const provider = new ethers.providers.JsonRpcProvider();\n  //   const signer = provider.getSigner()\n  //   const bankInfo = new ethers.Contract(bankContract, Bank.abi, provider);\n  //   const tokenInfo = new ethers.Contract(tokenContract, Token.abi, provider);\n  //   const bankAssets = ethers.utils.formatEther(await bankInfo.totalAssets(), 'ether');\n  //   const userAssets = ethers.utils.formatEther(await bankInfo.accounts(await signer.getAddress()))\n  //   const currentWallet = localStorage.getItem(\"address\");\n  //   setWalletConnect(currentWallet);\n  //   console.log(userAssets);\n  // }\n  // //Connect to wallet\n  // async function connectToWallet() {\n  //   const web3Modal = new Web3Modal();\n  //   const connection = await web3Modal.connect();\n  //   const provider = new ethers.providers.Web3Provider(connection)\n  //   const connectedACC = connection.selectedAddress;\n  // }\n  // return (\n  //   <div className=\"\">\n  //     <header className=\"\">\n  //       <h1 className=\"\">DA BANK</h1>\n  //       <p>A decentralized bank</p>\n  //       <button onClick={() => connectToWallet()}>{WalletConnected}</button>\n  //     </header>\n  //   </div>\n  // )\n  const {\n    activateBrowserWallet,\n    deactivate,\n    account\n  } = useEthers();\n  const userBalance = useEtherBalance(account);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!account && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: activateBrowserWallet,\n      children: \" Connect \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }, this), account && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deactivate,\n      children: \" Disconnect \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 20\n    }, this), account && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 20\n    }, this), userBalance && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Ether balance: \", formatEther(userBalance), \" ETH \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 6\n  }, this);\n}\n\n_s(App, \"9/BPz65OAwn9ePnIJfOgcDmx6ZU=\", false, function () {\n  return [useEthers, useEtherBalance];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/web_development/da-bank/src/App.js"],"names":["ChainId","DAppProvider","useEtherBalance","useEthers","formatEther","ethers","useState","useEffect","bankContract","tokenContract","Bank","Token","config","readOnlyChainId","Hardhat","readOnlyUrls","ReactDOM","render","document","getElementById","App","activateBrowserWallet","deactivate","account","userBalance"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,OAAT,EAAkBC,YAAlB,EAAgCC,eAAhC,EAAiDC,SAAjD,QAAkE,eAAlE;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAAQC,YAAR,EAAsBC,aAAtB,QAA0C,yBAA1C;AACA,OAAOC,IAAP,MAAiB,0CAAjB;AACA,OAAOC,KAAP,MAAkB,4CAAlB;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,eAAe,EAAEb,OAAO,CAACc,OADZ;AAEbC,EAAAA,YAAY,EAAE;AACZ,KAACf,OAAO,CAACc,OAAT,GAAmB;AADP;AAFD,CAAf;AAOAE,QAAQ,CAACC,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,YAAD;AAAc,IAAA,MAAM,EAAEL,MAAtB;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF;;AASA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEC,QAAM;AAAEC,IAAAA,qBAAF;AAAyBC,IAAAA,UAAzB;AAAqCC,IAAAA;AAArC,MAAiDpB,SAAS,EAAhE;AACA,QAAMqB,WAAW,GAAGtB,eAAe,CAACqB,OAAD,CAAnC;AAEA,sBACE;AAAA,eACG,CAACA,OAAD,iBAAY;AAAQ,MAAA,OAAO,EAAEF,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADf,EAEGE,OAAO,iBAAI;AAAQ,MAAA,OAAO,EAAED,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFd,EAIGC,OAAO,iBAAI;AAAA,8BAAaA,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAJd,EAKGC,WAAW,iBAAI;AAAA,oCAAmBpB,WAAW,CAACoB,WAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUF;;GAtDQJ,G;UAyCiDjB,S,EACnCD,e;;;KA1CdkB,G;AAwDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { ChainId, DAppProvider, useEtherBalance, useEthers } from '@usedapp/core';\nimport { formatEther } from '@ethersproject/units';\nimport { ethers } from 'ethers';\nimport { useState, useEffect } from 'react';\nimport {bankContract, tokenContract} from './contract-address.json';\nimport Bank from './artifacts/contracts/Bank.sol/Bank.json';\nimport Token from './artifacts/contracts/Token.sol/Token.json';\n\nconst config = {\n  readOnlyChainId: ChainId.Hardhat,\n  readOnlyUrls: {\n    [ChainId.Hardhat]: 'Hardhat',\n  },\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <DAppProvider config={config}>\n      <App />\n    </DAppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nfunction App() {\n  // //States\n  // const [WalletConnected, setWalletConnect] = useState(\"connect to wallet\");\n  // const [vault , setVault] = useState();\n  // const [userAssets, setUserAssets] = useState();\n  // useEffect(() => {\n  //   loadVault()\n  // }, [])\n\n  // async function loadVault() {\n  //   const provider = new ethers.providers.JsonRpcProvider();\n  //   const signer = provider.getSigner()\n  //   const bankInfo = new ethers.Contract(bankContract, Bank.abi, provider);\n  //   const tokenInfo = new ethers.Contract(tokenContract, Token.abi, provider);\n  //   const bankAssets = ethers.utils.formatEther(await bankInfo.totalAssets(), 'ether');\n  //   const userAssets = ethers.utils.formatEther(await bankInfo.accounts(await signer.getAddress()))\n  //   const currentWallet = localStorage.getItem(\"address\");\n  //   setWalletConnect(currentWallet);\n  //   console.log(userAssets);\n  // }\n\n  // //Connect to wallet\n  // async function connectToWallet() {\n  //   const web3Modal = new Web3Modal();\n  //   const connection = await web3Modal.connect();\n  //   const provider = new ethers.providers.Web3Provider(connection)\n  //   const connectedACC = connection.selectedAddress;\n  // }\n\n\n  // return (\n  //   <div className=\"\">\n  //     <header className=\"\">\n  //       <h1 className=\"\">DA BANK</h1>\n  //       <p>A decentralized bank</p>\n  //       <button onClick={() => connectToWallet()}>{WalletConnected}</button>\n\n  //     </header>\n  //   </div>\n  // )\n\n   const { activateBrowserWallet, deactivate, account } = useEthers();\n   const userBalance = useEtherBalance(account);\n\n   return (\n     <div>\n       {!account && <button onClick={activateBrowserWallet}> Connect </button>}\n       {account && <button onClick={deactivate}> Disconnect </button>}\n\n       {account && <p>Account: {account}</p>}\n       {userBalance && <p>Ether balance: {formatEther(userBalance)} ETH </p>}\n     </div>\n   );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}