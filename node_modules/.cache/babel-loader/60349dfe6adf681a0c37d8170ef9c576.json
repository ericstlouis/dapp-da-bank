{"ast":null,"code":"import './App.css';\nimport { ChainId, DAppProvider, useEtherBalance, useEthers } from '@usedapp/core';\nimport { ethers } from 'ethers';\nimport { useState, useEffect } from 'react';\nimport { bankContract, tokenContract } from './contract-address.json';\nimport Bank from './artifacts/contracts/Bank.sol/Bank.json';\nimport Token from './artifacts/contracts/Token.sol/Token.json';\n\nfunction App() {// //States\n  // const [WalletConnected, setWalletConnect] = useState(\"connect to wallet\");\n  // const [vault , setVault] = useState();\n  // const [userAssets, setUserAssets] = useState();\n  // useEffect(() => {\n  //   loadVault()\n  // }, [])\n  // async function loadVault() {\n  //   const provider = new ethers.providers.JsonRpcProvider();\n  //   const signer = provider.getSigner()\n  //   const bankInfo = new ethers.Contract(bankContract, Bank.abi, provider);\n  //   const tokenInfo = new ethers.Contract(tokenContract, Token.abi, provider);\n  //   const bankAssets = ethers.utils.formatEther(await bankInfo.totalAssets(), 'ether');\n  //   const userAssets = ethers.utils.formatEther(await bankInfo.accounts(await signer.getAddress()))\n  //   const currentWallet = localStorage.getItem(\"address\");\n  //   setWalletConnect(currentWallet);\n  //   console.log(userAssets);\n  // }\n  // //Connect to wallet\n  // async function connectToWallet() {\n  //   const web3Modal = new Web3Modal();\n  //   const connection = await web3Modal.connect();\n  //   const provider = new ethers.providers.Web3Provider(connection)\n  //   const connectedACC = connection.selectedAddress;\n  // }\n  // return (\n  //   <div className=\"\">\n  //     <header className=\"\">\n  //       <h1 className=\"\">DA BANK</h1>\n  //       <p>A decentralized bank</p>\n  //       <button onClick={() => connectToWallet()}>{WalletConnected}</button>\n  //     </header>\n  //   </div>\n  // )\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/web_development/da-bank/src/App.js"],"names":["ChainId","DAppProvider","useEtherBalance","useEthers","ethers","useState","useEffect","bankContract","tokenContract","Bank","Token","App"],"mappings":"AAAA,OAAO,WAAP;AACA,SAASA,OAAT,EAAkBC,YAAlB,EAAgCC,eAAhC,EAAiDC,SAAjD,QAAkE,eAAlE;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAAQC,YAAR,EAAsBC,aAAtB,QAA0C,yBAA1C;AACA,OAAOC,IAAP,MAAiB,0CAAjB;AACA,OAAOC,KAAP,MAAkB,4CAAlB;;AAGA,SAASC,GAAT,GAAe,CACb;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACD;;KAxCQA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { ChainId, DAppProvider, useEtherBalance, useEthers } from '@usedapp/core';\nimport { ethers } from 'ethers';\nimport { useState, useEffect } from 'react';\nimport {bankContract, tokenContract} from './contract-address.json';\nimport Bank from './artifacts/contracts/Bank.sol/Bank.json';\nimport Token from './artifacts/contracts/Token.sol/Token.json';\n\n\nfunction App() {\n  // //States\n  // const [WalletConnected, setWalletConnect] = useState(\"connect to wallet\");\n  // const [vault , setVault] = useState();\n  // const [userAssets, setUserAssets] = useState();\n  // useEffect(() => {\n  //   loadVault()\n  // }, [])\n\n  // async function loadVault() {\n  //   const provider = new ethers.providers.JsonRpcProvider();\n  //   const signer = provider.getSigner()\n  //   const bankInfo = new ethers.Contract(bankContract, Bank.abi, provider);\n  //   const tokenInfo = new ethers.Contract(tokenContract, Token.abi, provider);\n  //   const bankAssets = ethers.utils.formatEther(await bankInfo.totalAssets(), 'ether');\n  //   const userAssets = ethers.utils.formatEther(await bankInfo.accounts(await signer.getAddress()))\n  //   const currentWallet = localStorage.getItem(\"address\");\n  //   setWalletConnect(currentWallet);\n  //   console.log(userAssets);\n  // }\n\n  // //Connect to wallet\n  // async function connectToWallet() {\n  //   const web3Modal = new Web3Modal();\n  //   const connection = await web3Modal.connect();\n  //   const provider = new ethers.providers.Web3Provider(connection)\n  //   const connectedACC = connection.selectedAddress;\n  // }\n\n\n  // return (\n  //   <div className=\"\">\n  //     <header className=\"\">\n  //       <h1 className=\"\">DA BANK</h1>\n  //       <p>A decentralized bank</p>\n  //       <button onClick={() => connectToWallet()}>{WalletConnected}</button>\n\n  //     </header>\n  //   </div>\n  // )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}