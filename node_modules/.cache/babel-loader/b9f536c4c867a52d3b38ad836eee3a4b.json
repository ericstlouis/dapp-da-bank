{"ast":null,"code":"// import './App.css';\n// import { ChainId, DAppProvider, useEtherBalance, useEthers } from '@usedapp/core';\n// import { formatEther } from '@ethersproject/units';\n// import { ethers } from 'ethers';\n// import { useState, useEffect } from 'react';\n// import {bankContract, tokenContract} from './contract-address.json';\n// import Bank from './artifacts/contracts/Bank.sol/Bank.json';\n// import Token from './artifacts/contracts/Token.sol/Token.json';\n// function App() {\n//   // //States\n//   // const [WalletConnected, setWalletConnect] = useState(\"connect to wallet\");\n//   // const [vault , setVault] = useState();\n//   // const [userAssets, setUserAssets] = useState();\n//   // useEffect(() => {\n//   //   loadVault()\n//   // }, [])\n//   // async function loadVault() {\n//   //   const provider = new ethers.providers.JsonRpcProvider();\n//   //   const signer = provider.getSigner()\n//   //   const bankInfo = new ethers.Contract(bankContract, Bank.abi, provider);\n//   //   const tokenInfo = new ethers.Contract(tokenContract, Token.abi, provider);\n//   //   const bankAssets = ethers.utils.formatEther(await bankInfo.totalAssets(), 'ether');\n//   //   const userAssets = ethers.utils.formatEther(await bankInfo.accounts(await signer.getAddress()))\n//   //   const currentWallet = localStorage.getItem(\"address\");\n//   //   setWalletConnect(currentWallet);\n//   //   console.log(userAssets);\n//   // }\n//   // //Connect to wallet\n//   // async function connectToWallet() {\n//   //   const web3Modal = new Web3Modal();\n//   //   const connection = await web3Modal.connect();\n//   //   const provider = new ethers.providers.Web3Provider(connection)\n//   //   const connectedACC = connection.selectedAddress;\n//   // }\n//   // return (\n//   //   <div className=\"\">\n//   //     <header className=\"\">\n//   //       <h1 className=\"\">DA BANK</h1>\n//   //       <p>A decentralized bank</p>\n//   //       <button onClick={() => connectToWallet()}>{WalletConnected}</button>\n//   //     </header>\n//   //   </div>\n//   // )\n//    const { activateBrowserWallet, deactivate, account } = useEthers();\n//    const userBalance = useEtherBalance(account);\n//    return (\n//      <div>\n//        {!account && <button onClick={activateBrowserWallet}> Connect </button>}\n//        {account && <button onClick={deactivate}> Disconnect </button>}\n//        {account && <p>Account: {account}</p>}\n//        {userBalance && <p>Ether balance: {formatEther(userBalance)} ETH </p>}\n//      </div>\n//    );\n// }\n// export default App;","map":{"version":3,"sources":["C:/web_development/da-bank/src/App.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["// import './App.css';\n// import { ChainId, DAppProvider, useEtherBalance, useEthers } from '@usedapp/core';\n// import { formatEther } from '@ethersproject/units';\n// import { ethers } from 'ethers';\n// import { useState, useEffect } from 'react';\n// import {bankContract, tokenContract} from './contract-address.json';\n// import Bank from './artifacts/contracts/Bank.sol/Bank.json';\n// import Token from './artifacts/contracts/Token.sol/Token.json';\n\n\n\n// function App() {\n//   // //States\n//   // const [WalletConnected, setWalletConnect] = useState(\"connect to wallet\");\n//   // const [vault , setVault] = useState();\n//   // const [userAssets, setUserAssets] = useState();\n//   // useEffect(() => {\n//   //   loadVault()\n//   // }, [])\n\n//   // async function loadVault() {\n//   //   const provider = new ethers.providers.JsonRpcProvider();\n//   //   const signer = provider.getSigner()\n//   //   const bankInfo = new ethers.Contract(bankContract, Bank.abi, provider);\n//   //   const tokenInfo = new ethers.Contract(tokenContract, Token.abi, provider);\n//   //   const bankAssets = ethers.utils.formatEther(await bankInfo.totalAssets(), 'ether');\n//   //   const userAssets = ethers.utils.formatEther(await bankInfo.accounts(await signer.getAddress()))\n//   //   const currentWallet = localStorage.getItem(\"address\");\n//   //   setWalletConnect(currentWallet);\n//   //   console.log(userAssets);\n//   // }\n\n//   // //Connect to wallet\n//   // async function connectToWallet() {\n//   //   const web3Modal = new Web3Modal();\n//   //   const connection = await web3Modal.connect();\n//   //   const provider = new ethers.providers.Web3Provider(connection)\n//   //   const connectedACC = connection.selectedAddress;\n//   // }\n\n\n//   // return (\n//   //   <div className=\"\">\n//   //     <header className=\"\">\n//   //       <h1 className=\"\">DA BANK</h1>\n//   //       <p>A decentralized bank</p>\n//   //       <button onClick={() => connectToWallet()}>{WalletConnected}</button>\n\n//   //     </header>\n//   //   </div>\n//   // )\n\n//    const { activateBrowserWallet, deactivate, account } = useEthers();\n//    const userBalance = useEtherBalance(account);\n\n//    return (\n//      <div>\n//        {!account && <button onClick={activateBrowserWallet}> Connect </button>}\n//        {account && <button onClick={deactivate}> Disconnect </button>}\n\n//        {account && <p>Account: {account}</p>}\n//        {userBalance && <p>Ether balance: {formatEther(userBalance)} ETH </p>}\n//      </div>\n//    );\n\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}