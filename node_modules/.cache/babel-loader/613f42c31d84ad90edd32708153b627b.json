{"ast":null,"code":"var _jsxFileName = \"C:\\\\web_development\\\\da-bank\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Web3Modal from 'web3modal';\nimport { ethers } from 'ethers';\nimport { useState } from 'react';\nimport { bankContract, tokenContract } from './contract-address.json';\nimport Bank from './artifacts/contracts/Bank.sol/Bank.json';\nimport Token from './artifacts/contracts/Token.sol/Token.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //States\n  const [connectedACC, setConnectedACC] = useState('connect to wallet');\n  const [vault, setVault] = useState();\n  const [userAssets, setUserAssets] = useState();\n  useEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n\n  async function loadVault() {\n    const provider = new ethers.providers.JsonRpcProvider();\n    const bankInfo = new ethers.Contract(bankContract, Bank.abi, provider);\n    const tokenInfo = new ethers.Contract(tokenContract, Token.abi, provider);\n  } //Connect to wallet\n\n\n  async function connectToWallet() {\n    const web3Modal = new Web3Modal();\n    const connection = await web3Modal.connect();\n    const provider = new ethers.providers.Web3Provider(connection);\n    setConnectedACC(connection.selectedAddress);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"\",\n        children: \"DA BANK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A decentralized bank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => connectToWallet(),\n        children: connectedACC\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZiaEM2j/ZiNIddfi6K7KFr9bDa0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/web_development/da-bank/src/App.js"],"names":["Web3Modal","ethers","useState","bankContract","tokenContract","Bank","Token","App","connectedACC","setConnectedACC","vault","setVault","userAssets","setUserAssets","useEffect","effect","cleanup","input","loadVault","provider","providers","JsonRpcProvider","bankInfo","Contract","abi","tokenInfo","connectToWallet","web3Modal","connection","connect","Web3Provider","selectedAddress"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,SAAP,MAAsB,WAAtB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAAQC,YAAR,EAAsBC,aAAtB,QAA0C,yBAA1C;AACA,OAAOC,IAAP,MAAiB,0CAAjB;AACA,OAAOC,KAAP,MAAkB,4CAAlB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,mBAAD,CAAhD;AACA,QAAM,CAACQ,KAAD,EAASC,QAAT,IAAqBT,QAAQ,EAAnC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,EAA5C;AACAY,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,MAAM;AACN,WAAO,MAAM;AACXC,MAAAA,OAAO;AACR,KAFD;AAGD,GALQ,EAKN,CAACC,KAAD,CALM,CAAT;;AAOA,iBAAeC,SAAf,GAA2B;AACzB,UAAMC,QAAQ,GAAG,IAAIlB,MAAM,CAACmB,SAAP,CAAiBC,eAArB,EAAjB;AACA,UAAMC,QAAQ,GAAG,IAAIrB,MAAM,CAACsB,QAAX,CAAoBpB,YAApB,EAAkCE,IAAI,CAACmB,GAAvC,EAA4CL,QAA5C,CAAjB;AACA,UAAMM,SAAS,GAAG,IAAIxB,MAAM,CAACsB,QAAX,CAAoBnB,aAApB,EAAmCE,KAAK,CAACkB,GAAzC,EAA8CL,QAA9C,CAAlB;AAGD,GAlBY,CAuBb;;;AACA,iBAAeO,eAAf,GAAiC;AAC/B,UAAMC,SAAS,GAAG,IAAI3B,SAAJ,EAAlB;AACA,UAAM4B,UAAU,GAAG,MAAMD,SAAS,CAACE,OAAV,EAAzB;AACA,UAAMV,QAAQ,GAAG,IAAIlB,MAAM,CAACmB,SAAP,CAAiBU,YAArB,CAAkCF,UAAlC,CAAjB;AACAnB,IAAAA,eAAe,CAACmB,UAAU,CAACG,eAAZ,CAAf;AACD;;AAID,sBACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,EAAlB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAML,eAAe,EAAtC;AAAA,kBAA2ClB;AAA3C;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA1CQD,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Web3Modal from 'web3modal';\nimport { ethers } from 'ethers';\nimport { useState } from 'react';\n\nimport {bankContract, tokenContract} from './contract-address.json';\nimport Bank from './artifacts/contracts/Bank.sol/Bank.json';\nimport Token from './artifacts/contracts/Token.sol/Token.json';\n\n\nfunction App() {\n  //States\n  const [connectedACC, setConnectedACC] = useState('connect to wallet');\n  const [vault , setVault] = useState();\n  const [userAssets, setUserAssets] = useState();\n  useEffect(() => {\n    effect\n    return () => {\n      cleanup\n    }\n  }, [input])\n\n  async function loadVault() {\n    const provider = new ethers.providers.JsonRpcProvider();\n    const bankInfo = new ethers.Contract(bankContract, Bank.abi, provider);\n    const tokenInfo = new ethers.Contract(tokenContract, Token.abi, provider);\n\n\n  }\n\n\n\n\n  //Connect to wallet\n  async function connectToWallet() {\n    const web3Modal = new Web3Modal();\n    const connection = await web3Modal.connect();\n    const provider = new ethers.providers.Web3Provider(connection);\n    setConnectedACC(connection.selectedAddress);\n  }\n\n\n\n  return (\n    <div className=\"\">\n      <header className=\"\">\n        <h1 className=\"\">DA BANK</h1>\n        <p>A decentralized bank</p>\n        <button onClick={() => connectToWallet()}>{connectedACC}</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}