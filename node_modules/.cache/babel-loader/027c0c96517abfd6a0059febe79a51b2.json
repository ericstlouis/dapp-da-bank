{"ast":null,"code":"var _jsxFileName = \"C:\\\\web_development\\\\da-bank\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Web3Modal from 'web3modal';\nimport { ethers } from 'ethers';\nimport { useState, useEffect } from 'react';\nimport { bankContract, tokenContract } from './contract-address.json';\nimport Bank from './artifacts/contracts/Bank.sol/Bank.json';\nimport Token from './artifacts/contracts/Token.sol/Token.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //States\n  const [WalletConnected, setWalletConnect] = useState(\"connect to wallet\");\n  const [vault, setVault] = useState();\n  const [userAssets, setUserAssets] = useState();\n  useEffect(() => {\n    loadVault();\n  }, []);\n\n  async function loadVault() {\n    const defaultprovider = new ethers.providers.JsonRpcProvider();\n    const personalProvider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const bankInfo = new ethers.Contract(bankContract, Bank.abi, defaultprovider);\n    const tokenInfo = new ethers.Contract(tokenContract, Token.abi, provider);\n    const bankAssets = ethers.utils.formatEther(await bankInfo.totalAssets(), 'ether');\n    const userAssets = ethers.utils.formatEther(await bankInfo.accounts(await signer.getAddress()));\n    const userTotalToken = ethers.utils.formatEther(await tokenInfo.balanceOf(await signer.getAddress()));\n    const currentWallet = localStorage.getItem(\"address\");\n    setWalletConnect(currentWallet);\n    console.log(bankAssets);\n    console.log(userAssets);\n    console.log(userTotalToken);\n    console.log(signer.getAddress());\n  } //Connect to wallet\n\n\n  async function connectToWallet() {\n    const web3Modal = new Web3Modal();\n    const connection = await web3Modal.connect();\n    const provider = new ethers.providers.Web3Provider(connection);\n    const connectedACC = connection.selectedAddress;\n    localStorage.setItem(\"address\", connectedACC);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"\",\n        children: \"DA BANK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A decentralized bank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => connectToWallet(),\n        children: WalletConnected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mwM1cq63bA2vFJc0/KS0XMoLitc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/web_development/da-bank/src/App.js"],"names":["Web3Modal","ethers","useState","useEffect","bankContract","tokenContract","Bank","Token","App","WalletConnected","setWalletConnect","vault","setVault","userAssets","setUserAssets","loadVault","defaultprovider","providers","JsonRpcProvider","personalProvider","Web3Provider","window","ethereum","signer","provider","getSigner","bankInfo","Contract","abi","tokenInfo","bankAssets","utils","formatEther","totalAssets","accounts","getAddress","userTotalToken","balanceOf","currentWallet","localStorage","getItem","console","log","connectToWallet","web3Modal","connection","connect","connectedACC","selectedAddress","setItem"],"mappings":"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","sourcesContent":["import './App.css';\nimport Web3Modal from 'web3modal';\nimport { ethers } from 'ethers';\nimport { useState, useEffect } from 'react';\nimport {bankContract, tokenContract} from './contract-address.json';\nimport Bank from './artifacts/contracts/Bank.sol/Bank.json';\nimport Token from './artifacts/contracts/Token.sol/Token.json';\n\n\nfunction App() {\n  //States\n  const [WalletConnected, setWalletConnect] = useState(\"connect to wallet\");\n  const [vault , setVault] = useState();\n  const [userAssets, setUserAssets] = useState();\n  useEffect(() => {\n    loadVault()\n  }, [])\n\n  async function loadVault() {\n    const defaultprovider = new ethers.providers.JsonRpcProvider();\n    const personalProvider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner();\n    const bankInfo = new ethers.Contract(bankContract, Bank.abi, defaultprovider);\n    const tokenInfo = new ethers.Contract(tokenContract, Token.abi, provider);\n    const bankAssets = ethers.utils.formatEther(await bankInfo.totalAssets(), 'ether');\n    const userAssets = ethers.utils.formatEther(await bankInfo.accounts(await signer.getAddress()));\n    const userTotalToken = ethers.utils.formatEther((await tokenInfo.balanceOf(await signer.getAddress())))\n    const currentWallet = localStorage.getItem(\"address\");\n    setWalletConnect(currentWallet);\n    console.log(bankAssets);\n    console.log(userAssets);\n    console.log(userTotalToken);\n    console.log(signer.getAddress())\n  }\n\n  //Connect to wallet\n  async function connectToWallet() {\n    const web3Modal = new Web3Modal();\n    const connection = await web3Modal.connect();\n    const provider = new ethers.providers.Web3Provider(connection)\n    const connectedACC = connection.selectedAddress;\n    localStorage.setItem(\"address\", connectedACC)\n  }\n\n\n  return (\n    <div className=\"\">\n      <header className=\"\">\n        <h1 className=\"\">DA BANK</h1>\n        <p>A decentralized bank</p>\n        <button onClick={() => connectToWallet()}>{WalletConnected}</button>\n\n      </header>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}