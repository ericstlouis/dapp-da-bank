{"ast":null,"code":"var _jsxFileName = \"C:\\\\web_development\\\\da-bank\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Web3Modal from 'web3modal';\nimport { ethers } from 'ethers';\nimport { useState, useEffect } from 'react';\nimport { bankContract, tokenContract } from './contract-address.json';\nimport Bank from './artifacts/contracts/Bank.sol/Bank.json';\nimport Token from './artifacts/contracts/Token.sol/Token.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //States\n  const [depositAmount, setDepositAmount] = useState(\"\");\n  const [WalletConnected, setWalletConnect] = useState(\"connect to wallet\");\n  const [vault, setVault] = useState();\n  const [userAssets, setUserAssets] = useState();\n  useEffect(() => {}, []); //Connect to wallet\n\n  async function connectToWallet() {\n    const web3Modal = new Web3Modal();\n    const connection = await web3Modal.connect();\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const bankInfo = new ethers.Contract(bankContract, Bank.abi, provider);\n    const tokenInfo = new ethers.Contract(tokenContract, Token.abi, provider);\n    const bankAssets = ethers.utils.formatEther(await bankInfo.totalAssets(), 'ether');\n    const userAssets = ethers.utils.formatEther(await bankInfo.accounts(await signer.getAddress()));\n    const totalTokens = ethers.utils.formatEther(await tokenInfo.balanceOf(await signer.getAddress()));\n    console.log(connection.selectedAddress);\n    console.log(bankAssets);\n    console.log(userAssets);\n    console.log(totalTokens);\n  }\n\n  async function deposit(event) {\n    event.preventDefault();\n    const web3Modal = new Web3Modal();\n    const connection = await web3Modal.connect();\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const bankInfo = new ethers.Contract(bankContract, Bank.abi, signer);\n    const tokenInfo = new ethers.Contract(tokenContract, Token.abi, signer);\n    const tx = await bankInfo.deposit({\n      value\n    });\n    await tx.wait();\n    console.log(depositAmount);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"\",\n        children: \"DA BANK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A decentralized bank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => connectToWallet(),\n        children: WalletConnected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: deposit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"amount\",\n            value: depositAmount,\n            onChange: e => setDepositAmount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fdKn+vzAYKqy2MFBw2A9Hr67jo0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/web_development/da-bank/src/App.js"],"names":["Web3Modal","ethers","useState","useEffect","bankContract","tokenContract","Bank","Token","App","depositAmount","setDepositAmount","WalletConnected","setWalletConnect","vault","setVault","userAssets","setUserAssets","connectToWallet","web3Modal","connection","connect","provider","providers","Web3Provider","window","ethereum","signer","getSigner","bankInfo","Contract","abi","tokenInfo","bankAssets","utils","formatEther","totalAssets","accounts","getAddress","totalTokens","balanceOf","console","log","selectedAddress","deposit","event","preventDefault","tx","value","wait","e","target"],"mappings":"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","sourcesContent":["import './App.css';\nimport Web3Modal from 'web3modal';\nimport { ethers } from 'ethers';\nimport { useState, useEffect } from 'react';\nimport {bankContract, tokenContract} from './contract-address.json';\nimport Bank from './artifacts/contracts/Bank.sol/Bank.json';\nimport Token from './artifacts/contracts/Token.sol/Token.json';\n\n\nfunction App() {\n  //States\n  const [depositAmount, setDepositAmount] = useState(\"\")\n  const [WalletConnected, setWalletConnect] = useState(\"connect to wallet\");\n  const [vault , setVault] = useState();\n  const [userAssets, setUserAssets] = useState();\n  useEffect(() => {\n  }, [])\n\n\n  //Connect to wallet\n  async function connectToWallet() {\n    const web3Modal = new Web3Modal();\n    const connection = await web3Modal.connect();\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner()\n    const bankInfo = new ethers.Contract(bankContract, Bank.abi, provider);\n    const tokenInfo = new ethers.Contract(tokenContract, Token.abi, provider);\n    const bankAssets = ethers.utils.formatEther(await bankInfo.totalAssets(), 'ether');\n    const userAssets = ethers.utils.formatEther(await bankInfo.accounts(await signer.getAddress()))\n    const totalTokens = ethers.utils.formatEther(await tokenInfo.balanceOf(await signer.getAddress()))\n\n    console.log(connection.selectedAddress);\n    console.log(bankAssets);\n    console.log(userAssets);\n    console.log(totalTokens);\n  }\n\n  async function deposit(event) {\n    event.preventDefault();\n    const web3Modal = new Web3Modal();\n    const connection = await web3Modal.connect();\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner()\n    const bankInfo = new ethers.Contract(bankContract, Bank.abi, signer);\n    const tokenInfo = new ethers.Contract(tokenContract, Token.abi, signer);\n    const tx = await bankInfo.deposit(\n      {value});\n    await tx.wait();\n    console.log(depositAmount)\n\n\n  }\n\n  return (\n    <div className=\"\">\n      <header className=\"\">\n        <h1 className=\"\">DA BANK</h1>\n        <p>A decentralized bank</p>\n        <button onClick={() => connectToWallet()}>{WalletConnected}</button>\n\n        <form onSubmit={deposit}>\n          <label>\n            Value:\n            <input type=\"number\" name=\"amount\" value={depositAmount} onChange={(e) => setDepositAmount(e.target.value)} />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}